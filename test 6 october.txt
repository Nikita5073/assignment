//bubble sort
#include<bits/stdc++.h>
using namespace std;
void bubble_sort(int arr[],int n)
{
    for(int i=0;i<n-1;i++)
    {
        for(int j=0;j<n-1-i;j++)
        {
            if(arr[j]>arr[j+1])
            {
                swap(arr[j],arr[j+1]);
            }
        }
    }
    for(int i=0;i<n;i++)
    {
        cout<<arr[i]<<" ";
    }
}
int main()
{
    int arr[]={99,25,35,55,45,105,95};
    int n=(sizeof(arr)/sizeof(arr[0]));
    bubble_sort(arr,n);
}
---------------------------------------------------------------------------------
//insertion sort
#include<bits/stdc++.h>
using namespace std;
void insertion_sort(int arr[],int n)
{
    for(int i=0;i<n;i++)
    {
        for(int j=i-1;j>=0;j--)
        {
            if(arr[j]>arr[j+1])
            {
                swap(arr[j],arr[j+1]);
            }
        }
    }
    for(int i=0;i<n;i++)
    {
        cout<<arr[i]<<" ";
    }
}
int main()
{
    int arr[]={2,9,5,1,3};
    int n=(sizeof(arr)/sizeof(arr[0]));
    insertion_sort(arr,n);
}
-------------------------------------------------------------------------------
//linearSearch
#include<bits/stdc++.h>
using namespace std;
void linearSearch(int arr[],int n,int key,int index)
{
    int flag=-1;
    for(int i=0;i<n;i++)
    {
        if(arr[i]==key)
        {
            flag=1;
            index=i;
            break;
        }
    }
    if(flag==1)
    {
        cout<<"element found at position"<<index<<" ";
    }
    else 
    {
        cout<<"element not found"<<" ";
    }
}
int main()
{
    int arr[]={15,25,12,95,85,35,45,65};
    int n=(sizeof(arr)/sizeof(arr[0]));
    int key=85,index=-1;
    linearSearch(arr,n,key,index);
}
--------------------------------------------------------------------------
//mergesortarray
#include<bits/stdc++.h>
using namespace std;
void mergeSortArray(vector<int>&arr1, vector<int>&arr2, vector<int>&arr3)
{
    int i=0;
    int j=0;
    while(i<arr1.size() && j<arr2.size())
    {
        if(arr1[i]<arr2[j])
        {
            arr3.push_back(arr1[i]);
            i++;
        }
        else
        {
            arr3.push_back(arr2[j]);
            j++;
        }
    }
    while(i<arr1.size())
    {
        arr3.push_back(arr1[i]);
        i++;
    }
    while(j<arr2.size())
    {
        arr3.push_back(arr2[j]);
        j++;
    }
}
int main()
{
    vector<int>arr1={1,3,5,7};
    vector<int>arr2={2,4,6,8};
    vector<int>arr3;
    mergeSortArray(arr1,arr2,arr3);
    cout<<"merge sorted array:\n";
    for(auto it:arr3)
    {
        cout<<it<<" ";
    }
}
---------------------------------------------------------------------------------------------